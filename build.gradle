/*
 * Copyright Â© 2017, 2023 IBM Corp. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

buildscript {
    repositories {
        maven { url 'https://repo.spring.io/plugins-release' }
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${compileWithBootVersion}")
    }
}

plugins {
    id "com.github.spotbugs" version "5.0.13"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.github.spotbugs'

group = 'com.ibm.cloud'
version = new File(rootDir, 'VERSION').text.trim()

// If the version says "snapshot" anywhere assume it is not a release
ext.isReleaseVersion = !version.toUpperCase(Locale.ENGLISH).contains("SNAPSHOT")

sourceCompatibility = 8
targetCompatibility = 8

repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    // java-cloudant client
    api group: 'com.ibm.cloud', name: 'cloudant', version: '0.5.0'
    // spring
    api group: 'org.springframework.boot', name: 'spring-boot', version: compileWithBootVersion
    api group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: compileWithBootVersion
    api group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: compileWithBootVersion
    // testing
    // TODO these should be in the pom with scope test
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.2'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: compileWithBootVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.2.0'
}

java {
    withJavadocJar()
    withSourcesJar()
}

// Include variable debug info in the compiled classes
compileJava.options.debugOptions.debugLevel = "source,lines,vars"
// Fail on javac warnings
compileJava.options.compilerArgs << "-Werror"

tasks.named('test', Test) {
    useJUnitPlatform()
}

// Always UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

javadoc {
    options.encoding 'UTF-8'
    options.setMemberLevel JavadocMemberLevel.PROTECTED
}
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

// Load signing and repository parameters from system properties
['signing.keyId', 'signing.password', 'signing.secretKeyRingFile', 'ossrhUsername', 'ossrhPassword']
        .each { propName ->
            //set a property with the given name if the system property is set
            //if the system property is not set then set the property to null if it isn't a signing one
            if (System.properties.(propName.toString()) != null || !propName.startsWith("signing")) {
                ext.(propName.toString()) = System.properties.(propName.toString())
            }
        }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                packaging = 'jar'
                url = 'https://www.ibm.com/cloud/cloudant'
                description = 'Spring configuration for the official Cloudant library for Java'
                inceptionYear = '2017'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/IBM/cloudant-spring.git'
                    developerConnection = 'scm:git:git@github.com/IBM/cloudant-spring.git'
                    url = 'https://github.com/IBM/cloudant-spring.git'
                }
                developers {
                    developer {
                        name = 'IBM Cloudant'
                        email = 'cldtsdks@us.ibm.com'
                        url = 'https://www.ibm.com/cloud/cloudant'
                        organization = 'IBM'
                        organizationUrl = 'http://www.ibm.com'
                    }
                }
            }
        }
    }

    signing {
        // When signing, sign the archives
        sign publishing.publications.mavenJava
    }

    repositories {
        maven {
            url = isReleaseVersion ?
                    "https://oss.sonatype.org/service/local/staging/deploy/maven2/" :
                    "https://oss.sonatype.org/content/repositories/snapshots"
            credentials(PasswordCredentials) {
                username = System.env.OSSRH_USER
                password = System.env.OSSRH_PASSWORD
            }
        }
    }
}

spotbugs {
    reportLevel = "low"
    effort = "max"
    includeFilter = file("findbugs-exclude.xml")
}

spotbugsMain {
    reports {
        xml {
            required = true
        }
    }
}

