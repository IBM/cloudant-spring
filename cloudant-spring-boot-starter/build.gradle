/*
 * Copyright Â© 2017 IBM Corp. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'

buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot', version: compileWithBootVersion
  compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: compileWithBootVersion
  optional group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: compileWithBootVersion
}

configurations {  
    //Update the resolvers for the test configs to switch the Spring Versions.
    testCompileClasspath {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
           switchSpringVersions(details)
        }
    }      
    testRuntimeClasspath {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
           switchSpringVersions(details)
        }
    }
}

//Rewrite the dependencies to force us to test with Spring 1.5.x to maintain compatibility.
def switchSpringVersions(DependencyResolveDetails details){
             if (details.requested.group == 'org.springframework' && details.requested.version == compileWithSpringVersion ) {
                details.useVersion testWithSpringVersion
                details.because 'We want to test against Spring Boot 1.5.x'
            }
            if (details.requested.group == 'org.springframework.boot' && details.requested.version == compileWithBootVersion ) {
                details.useVersion testWithBootVersion
                details.because 'We want to test against Spring Boot 1.5.x'
            } 
}

compileJava.dependsOn(processResources)
